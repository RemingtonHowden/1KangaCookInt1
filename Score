// App.js

import React, { useState, useEffect } from 'react';

// Welcome component
function Welcome(props) {
  return <h1>Hello, {props.name}</h1>;
}

// Post component
function Post(props) {
  return (
    <div>
      <h2>{props.post.title}</h2>
      <p>{props.post.content}</p>
    </div>
  );
}

// PostList component
function PostList(props) {
  return (
    <div>
      {props.posts.map(post => (
        <Post key={post.id} post={post} />
      ))}
    </div>
  );
}

// Example data for posts
const posts = [
  { id: 1, title: 'First Post', content: 'This is the content of the first post.' },
  { id: 2, title: 'Second Post', content: 'Here is the content of the second post.' },
];

// Main App component
function App() {
  const [apiData, setApiData] = useState([]);

  useEffect(() => {
    // Fetch data from your Django API endpoints
    fetch('/api/tasks/')
      .then(response => response.json())
      .then(data => setApiData(data))
      .catch(error => console.error('Error fetching data:', error));
  }, []);

  return (
    <div className="App">
      <Welcome name="React Developer" />
      <PostList posts={apiData} />
    </div>
  );
}

export default App;


from fastapi import FastAPI

app = FastAPI()

@app.get("/health")
def check_health():
    return {"status": "healthy"}

@app.get("/api/tasks")
def get_tasks():
    # Fetch tasks from your database or other data source
    # Return them as a list of dictionaries
    return [
        {"id": 1, "title": "First Post", "content": "This is the content of the first post."},
        {"id": 2, "title": "Second Post", "content": "Here is the content of the second post."},
    ]

@app.post("/api/tasks")
def create_task(task: dict):
    # Save the task to your database
    # Return the created task
    return task
